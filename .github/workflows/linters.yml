---
name: linters
on:
  workflow_run:
    workflows: ['format']
    types:
      - completed
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Stop if format failed
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo ${{ github.event.workflow_run.conclusion }}
          exit 1
      - uses: bansan85/action-workflow_run-status@main
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: ${{ github.event.workflow_run.head_commit.id }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Globally update npm
        run: npm install -g npm
      - name: Install SSH key
        if: ${{ github.event.workflow_run.head_branch == 'master' }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.GITHUBCI_PRIVATE_KEY }}
          known_hosts: localhost ssh-rsa ${{ secrets.GITHUBCI_KNOW_HOSTS }}
      - name: Install 3rdparty
        run: xargs -a config/apt-get.txt sudo apt-get install -yq
      - name: Install linters
        run: |
          sudo apt-get install -yq cppcheck shellcheck clang-tidy-14 clang-14 iwyu
      - name: Fix clang-tidy
        # Fixed in spdlog 1.8.5
        run: |
          sudo sed -i "s/set_formatter(std::move(f));/\0break;/g" /usr/include/spdlog/logger-inl.h
          sudo sed -i "s/buffer\[len - 1.*/\0 \/\/NOLINT/g" /usr/include/rapidjson/internal/dtoa.h
      - name: Set up Python "3.10"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python modules dependencies
        run: |
          python -m pip install --upgrade pip pipdeptree wheel
          pip install -r requirements-linter.txt
          pipdeptree -f > requirements-linter-ci.tmp
          diff -pu requirements-linter.txt requirements-linter-ci.tmp
      - name: Install node dependencies
        run: |
          npm install
      - name: Publish documentation
        if: ${{ github.event.workflow_run.head_branch == 'master' }}
        env:
          COMMIT_MESSAGE: ${{ github.event.workflow_run.head_commit.message }}
        run: |
          git clone --depth 1 ssh://git@github.com/bansan85/jessica-ci.git -b linters
          rm -Rf jessica-ci/*
          apt list --installed > jessica-ci/apt-installed.txt
          eval `ssh-agent`
          ssh-add ~/.ssh/id_rsa
          gpg --version
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.ENCRYPT_PASSWORD }}" --output .github/encrypted/github-ci-private.key .github/encrypted/github-ci-private.key.gpg
          gpg --import .github/encrypted/github-ci-private.key
          cd jessica-ci || exit 1
          git config --global user.name "Github CI"
          git config --global user.email "github-ci@le-garrec.fr"
          git add .
          if [ -n "$(git diff-index --name-only HEAD --)" ]; \
          then \
            git commit -S${{ secrets.GPG_KEY_ID }} -m "${COMMIT_MESSAGE//\"/\"\"}" -m "Update from bansan85/jessica@$GITHUB_SHA"; \
            git push || { echo "Failure git push" && exit 1; } \
          fi
          cd .. || exit 1
      - name: Apply fix that is automatically commited in main branch
        if: ${{ github.event.workflow_run.head_branch != 'master' }}
        run: |
          npx eslint --ext .js,.js.in,.html,.html.in . --fix || exit 0
      - name: Run linters
        env:
          AR: /usr/bin/llvm-ar-14
          CC: /usr/bin/clang-14
          CXX: /usr/bin/clang++-14
          RANLIB: /usr/bin/llvm-ranlib-14
        run: |
          bash ./.github/scripts/linters.sh
