---
name: Angular and Emscripten
on:
  workflow_run:
    workflows: ['format']
    types:
      - completed
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - config: Debug
            config-angular: -dev
          - config: Release
            config-angular: ''
    steps:
      - name: Stop if format failed
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: exit 1
      - uses: bansan85/action-workflow_run-status@main
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: ${{ github.event.workflow_run.head_commit.id }}
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            src/angular/package-lock.json
      - name: Globally update npm
        run: npm install -g npm
      - name: Install SSH key
        if: ${{ github.event.workflow_run.head_branch == 'master' }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.GITHUBCI_PRIVATE_KEY }}
          known_hosts: localhost ssh-rsa ${{ secrets.GITHUBCI_KNOW_HOSTS }}
      - name: Install emscripten
        run: |
          git clone --depth=1 https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          echo "EMSDK=${{ github.workspace }}/emsdk" >> $GITHUB_ENV
          echo "EM_CONFIG=${{ github.workspace }}/emsdk/.emscripten" >> $GITHUB_ENV
          echo "${{ github.workspace }}/emsdk" >> $GITHUB_PATH
          echo "${{ github.workspace }}/emsdk/upstream/emscripten" >> $GITHUB_PATH
          cd ..
      - name: Install Windows Vcpkg
        uses: lukka/run-vcpkg@v6
        id: runvcpkg
        with:
          vcpkgArguments: '@${{ github.workspace }}/config/cmake/vcpkg_emscripten.txt'
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgTriplet: 'wasm32-emscripten'
          appendedCacheKey: ${{ hashFiles( format('{0}/config/cmake/vcpkg_emscripten.txt', github.workspace) ) }}
      - name: cmake
        run: |
          source ./emsdk/emsdk_env.sh
          mkdir build
          emcmake cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=${{ env.EMSDK }}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DVCPKG_TARGET_TRIPLET=wasm32-emscripten -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_PREFIX_PATH=${{ github.workspace }}/vcpkg/installed/wasm32-emscripten/share/spdlog
          cmake --build build/ --target all --config ${{ matrix.config }}
      - name: ctest
        shell: bash
        run: |
          cd build || exit 1
          ctest -O test-result.xml --output-on-failure --verbose
          cd .. || exit 1
      - name: Start server
        run: |
          cd src/angular || exit 1
          npm run start &
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: src/angular
          wait-on: 'http://localhost:4200'
          wait-on-timeout: 300
          browser: chrome
          headless: true
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: src/angular/cypress/screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: src/angular/cypress/videos
      - name: pa11y
        run: |
          cd src/angular || exit 1
          npx pa11y http://localhost:4200
      - name: Publish test
        if: ${{ github.event.workflow_run.head_branch == 'master' }}
        env:
          COMMIT_MESSAGE: ${{ github.event.workflow_run.head_commit.message }}
        run: |
          eval `ssh-agent`
          git clone --depth 1 ssh://git@github.com/bansan85/jessica-ci.git -b emscripten
          rm -Rf jessica-ci/*
          cp build/test-result.xml jessica-ci
          apt list --installed > jessica-ci/apt-installed.txt
          ssh-add ~/.ssh/id_rsa
          gpg --version
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.ENCRYPT_PASSWORD }}" --output .github/encrypted/github-ci-private.key .github/encrypted/github-ci-private.key.gpg
          gpg --import .github/encrypted/github-ci-private.key
          cd jessica-ci || exit 1
          git config --global user.name "Github CI"
          git config --global user.email "github-ci@le-garrec.fr"
          git add .
          if [ -n "$(git diff-index --name-only HEAD --)" ]; \
          then \
            git commit -S${{ secrets.GPG_KEY_ID }} -m "${COMMIT_MESSAGE//\"/\"\"}" -m "Update from bansan85/jessica@$GITHUB_SHA"; \
            git push || { echo "Failure git push" && exit 1; } \
          fi
          cd .. || exit 1
