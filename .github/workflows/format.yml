---
name: format
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout with token
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'push' }}
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: ${{ github.event.workflow_run.head_commit.id }}
      - name: checkout without token
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'push' }}
        with:
          ref: ${{ github.event.workflow_run.head_commit.id }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Globally update npm
        run: npm install -g npm
      - name: Install SSH key
        if: ${{ github.event_name == 'push' }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.GITHUBCI_PRIVATE_KEY }}
          known_hosts: localhost ssh-rsa ${{ secrets.GITHUBCI_KNOW_HOSTS }}
      - name: Configure git
        run: |
          git config --global user.name "Github CI"
          git config --global user.email "github-ci@le-garrec.fr"
      - name: Configure git with token
        if: ${{ github.event_name == 'push' }}
        run: |
          eval `ssh-agent`
          ssh-add ~/.ssh/id_rsa
          gpg --version
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.ENCRYPT_PASSWORD }}" --output .github/encrypted/github-ci-private.key .github/encrypted/github-ci-private.key.gpg
          gpg --import .github/encrypted/github-ci-private.key
      - name: 3rdparty
        run: sudo apt-get install -yq clang-14 llvm-14 clang-format-14
      - name: Set up Python "3.10"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python modules dependencies
        run: |
          python -m pip install --upgrade pip pipdeptree wheel
          pip install -r requirements-linter.txt
          pipdeptree -f > requirements-linter-ci.tmp
          diff -pu requirements-linter.txt requirements-linter-ci.tmp
      - name: Install node dependencies
        run: |
          npm install
      - name: Publish data from CI
        if: ${{ github.event_name == 'push' }}
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          git clone --depth 1 ssh://git@github.com/bansan85/jessica-ci.git -b format
          rm -Rf jessica-ci/*
          apt list --installed > jessica-ci/apt-installed.txt
          eval `ssh-agent`
          ssh-add ~/.ssh/id_rsa
          gpg --version
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.ENCRYPT_PASSWORD }}" --output .github/encrypted/github-ci-private.key .github/encrypted/github-ci-private.key.gpg
          gpg --import .github/encrypted/github-ci-private.key
          cd jessica-ci || exit 1
          git add .
          if [ -n "$(git diff-index --name-only HEAD --)" ]; \
          then \
            git commit -S${{ secrets.GPG_KEY_ID }} -m "${COMMIT_MESSAGE//\"/\"\"}" -m "Update from bansan85/jessica@$GITHUB_SHA"; \
            git push || { echo "Failure git push" && exit 1; } \
          fi
          cd .. || exit 1
          rm -Rf jessica-ci
      - name: formatter
        shell: bash
        run: |
          bash ./.github/scripts/format.sh
      - name: Fix formatting
        shell: bash
        run: |
          git add .
          if [ -n "$(git diff-index --name-only HEAD --)" ]; \
          then \
            echo "Please, fix formatting with uploaded patch."
            git diff --cached > format.diff ; \
            exit 1; \
          fi
      - uses: actions/upload-artifact@v3
        if: failure() && hashFiles('format.diff') != ''
        with:
          name: format.diff
          path: format.diff
      - name: Check various rules
        shell: bash
        run: |
          [[ $(find . \( -path ./build -o -path ./vcpkg \) -prune -type f -o -name "*.cpp" -o -name "*.hpp" | wc -l) == 0 ]] || exit 1
